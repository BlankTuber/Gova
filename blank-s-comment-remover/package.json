{
  "name": "blank-comment-remover",
  "publisher": "QuidqueStudio",
  "displayName": "Blank's Comment Remover",
  "description": "A VS Code extension to intelligently remove comments from files and folders.",
  "version": "2.0.0",
  "engines": {
    "vscode": "^1.95.0"
  },
  "categories": ["Other"],
  "main": "./extension.js",
  "contributes": {
    "commands": [
      {
        "command": "extension.removeCommentsFromFile",
        "title": "Remove Comments from File",
        "category": "Comment Remover"
      },
      {
        "command": "extension.removeCommentsFromFolder",
        "title": "Remove Comments from Folder",
        "category": "Comment Remover"
      },
      {
        "command": "extension.previewCommentsFromFile",
        "title": "Preview Comment Removal",
        "category": "Comment Remover"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "extension.removeCommentsFromFile",
          "when": "!explorerResourceIsFolder",
          "group": "navigation"
        },
        {
          "command": "extension.removeCommentsFromFolder",
          "when": "explorerResourceIsFolder",
          "group": "navigation"
        },
        {
          "command": "extension.previewCommentsFromFile",
          "when": "!explorerResourceIsFolder",
          "group": "navigation"
        }
      ]
    }
  },
  "configuration": {
    "type": "object",
    "title": "Comment Remover Settings",
    "properties": {
      "commentRemover.patterns": {
      "type": "object",
      "description": "Custom comment patterns for different file types. Specify singleLine and block patterns as regular expressions.",
      "default": {
        "js": {
          "singleLine": "(?<![:\\w])\\/\\/.*$",
          "block": "\\/\\*[\\s\\S]*?\\*\\/"
        },
        "ts": {
          "singleLine": "(?<![:\\w])\\/\\/.*$",
          "block": "\\/\\*[\\s\\S]*?\\*\\/"
        },
        "jsx": {
          "singleLine": "(?<![:\\w])\\/\\/.*$",
          "block": "\\/\\*[\\s\\S]*?\\*\\/"
        },
        "tsx": {
          "singleLine": "(?<![:\\w])\\/\\/.*$",
          "block": "\\/\\*[\\s\\S]*?\\*\\/"
        },
        "py": {
          "singleLine": "(?<![\\w:&#])[#].*$",
          "block": "\"\"\"[\\s\\S]*?\"\"\"|'''[\\s\\S]*?'''"
        },
        "java": {
          "singleLine": "(?<![:\\w])\\/\\/.*$",
          "block": "\\/\\*[\\s\\S]*?\\*\\/"
        },
        "c": {
          "singleLine": "(?<![:\\w])\\/\\/.*$",
          "block": "\\/\\*[\\s\\S]*?\\*\\/"
        },
        "cpp": {
          "singleLine": "(?<![:\\w])\\/\\/.*$",
          "block": "\\/\\*[\\s\\S]*?\\*\\/"
        },
        "html": {
          "singleLine": null,
          "block": "<!--[\\s\\S]*?-->"
        },
        "css": {
          "singleLine": null,
          "block": "\\/\\*[\\s\\S]*?\\*\\/"
        },
        "php": {
          "singleLine": "(?<![:\\w])\\/\\/.*$|(?<![\\w:&#])[#].*$",
          "block": "\\/\\*[\\s\\S]*?\\*\\/"
        },
        "json": {
          "singleLine": null,
          "block": null
        },
        "xml": {
          "singleLine": null,
          "block": "<!--[\\s\\S]*?-->"
        },
        "yaml": {
          "singleLine": "(?<![\\w:&#])[#].*$",
          "block": null
        },
        "yml": {
          "singleLine": "(?<![\\w:&#])[#].*$",
          "block": null
        },
        "toml": {
          "singleLine": "(?<![\\w:&#])[#].*$",
          "block": null
        },
        "rb": {
          "singleLine": "(?<![\\w:&#])[#].*$",
          "block": "^=begin[\\s\\S]*?^=end"
        },
        "swift": {
          "singleLine": "(?<![:\\w])\\/\\/.*$",
          "block": "\\/\\*[\\s\\S]*?\\*\\/"
        },
        "go": {
          "singleLine": "(?<![:\\w])\\/\\/.*$",
          "block": "\\/\\*[\\s\\S]*?\\*\\/"
        },
        "rs": {
          "singleLine": "(?<![:\\w])\\/\\/.*$",
          "block": "\\/\\*[\\s\\S]*?\\*\\/"
        },
        "sql": {
          "singleLine": "--(?!\\[|\\w).*$",
          "block": "\\/\\*[\\s\\S]*?\\*\\/"
        },
        "sh": {
          "singleLine": "(?<![\\w:&#])[#].*$",
          "block": null
        },
        "bash": {
          "singleLine": "(?<![\\w:&#])[#].*$",
          "block": null
        },
        "bat": {
          "singleLine": "(?<!\\w)REM\\s.*$",
          "block": null
        },
        "ps1": {
          "singleLine": "(?<![\\w:&#])[#].*$",
          "block": "<#[\\s\\S]*?#>"
        },
        "pl": {
          "singleLine": "(?<![\\w:&#])[#].*$",
          "block": "^=pod[\\s\\S]*?^=cut"
        },
        "lua": {
          "singleLine": "--(?!\\[\\[).*$",
          "block": "--\\[\\[[\\s\\S]*?\\]\\]"
        },
        "kt": {
          "singleLine": "(?<![:\\w])\\/\\/.*$",
          "block": "\\/\\*[\\s\\S]*?\\*\\/"
        },
        "scala": {
          "singleLine": "(?<![:\\w])\\/\\/.*$",
          "block": "\\/\\*[\\s\\S]*?\\*\\/"
        },
        "dart": {
          "singleLine": "(?<![:\\w])\\/\\/.*$",
          "block": "\\/\\*[\\s\\S]*?\\*\\/"
        },
        "r": {
          "singleLine": "(?<![\\w:&#])[#].*$",
          "block": null
        },
        "m": {
          "singleLine": "(?<!\\w)%.*$",
          "block": "%\\{[\\s\\S]*?%\\}"
        },
        "asm": {
          "singleLine": ";.*$",
          "block": null
        },
        "s": {
          "singleLine": ";.*$|(?<![:\\w])\\/\\/.*$",
          "block": "\\/\\*[\\s\\S]*?\\*\\/"
        },
        "hs": {
          "singleLine": "(?<![:\\-])--.*$",
          "block": "\\{-[\\s\\S]*?-\\}"
        },
        "elm": {
          "singleLine": "(?<![:\\-])--.*$",
          "block": "\\{-[\\s\\S]*?-\\}"
        },
        "clj": {
          "singleLine": ";.*$",
          "block": null
        },
        "scm": {
          "singleLine": ";.*$",
          "block": "#\\|[\\s\\S]*?\\|#"
        },
        "lisp": {
          "singleLine": ";.*$",
          "block": "#\\|[\\s\\S]*?\\|#"
        },
        "vb": {
          "singleLine": "'.*$",
          "block": null
        },
        "pas": {
          "singleLine": "(?<![:\\w])\\/\\/.*$",
          "block": "\\{[\\s\\S]*?\\}|\\(\\*[\\s\\S]*?\\*\\)"
        },
        "f90": {
          "singleLine": "!.*$",
          "block": null
        },
        "f": {
          "singleLine": "!.*$",
          "block": null
        }
      }
    },
      "commentRemover.confirmSubfolders": {
        "type": "boolean",
        "default": true,
        "description": "Confirm before processing subfolders"
      }
    }
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/BlankTuber/Gova/tree/071220301341ea128bfd14d9b89c4f7eb198f2ef/blank-s-comment-remover"
  },
  "scripts": {
    "lint": "eslint .",
    "pretest": "npm run lint",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/vscode": "^1.95.0",
    "@types/node": "^20.0.0",
    "eslint": "^9.0.0",
    "@vscode/test-electron": "^2.4.1"
  }
}